openapi: 3.0.3
info:
  title: 'HCPortal API'
  description: 'HCPortal - Ciphers and Cipher keys API documentation'
  version: 1.0.0
servers:
  -
    url: 'http://dp.test'
paths:
  /api/archives:
    get:
      summary: 'Show all archives'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: Success
                  status_code: 200
                  message: 'List of all archives.'
                  data:
                    -
                      id: 1
                      short_name: 'archive 1'
                      name: 'archive 1'
                      country: null
                      fonds:
                        -
                          id: 1
                          name: 'fond 1'
                          archive_id: 1
                          folders:
                            -
                              id: 1
                              name: 'folder 1'
                              fond_id: 1
                              start_date: null
                              end_date: null
                        -
                          id: 2
                          name: fafafa
                          archive_id: 1
                          folders:
                            -
                              id: 2
                              name: lala
                              fond_id: 2
                              start_date: null
                              end_date: null
                        -
                          id: 3
                          name: 'fond 2'
                          archive_id: 1
                          folders: []
                        -
                          id: 4
                          name: hahaha
                          archive_id: 1
                          folders:
                            -
                              id: 3
                              name: jahaha
                              fond_id: 4
                              start_date: null
                              end_date: null
                    -
                      id: 2
                      short_name: haha3
                      name: haha3
                      country: null
                      fonds:
                        -
                          id: 5
                          name: hahaha2
                          archive_id: 2
                          folders:
                            -
                              id: 4
                              name: hahaha
                              fond_id: 5
                              start_date: null
                              end_date: null
                    -
                      id: 3
                      short_name: haha3
                      name: haha3
                      country: null
                      fonds:
                        -
                          id: 6
                          name: hahaha2
                          archive_id: 3
                          folders:
                            -
                              id: 5
                              name: hahaha
                              fond_id: 6
                              start_date: null
                              end_date: null
                    -
                      id: 4
                      short_name: haha3
                      name: haha3
                      country: null
                      fonds:
                        -
                          id: 7
                          name: hahaha2
                          archive_id: 4
                          folders:
                            -
                              id: 6
                              name: hahaha
                              fond_id: 7
                              start_date: null
                              end_date: null
                properties:
                  status:
                    type: string
                    example: Success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'List of all archives.'
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        short_name: 'archive 1'
                        name: 'archive 1'
                        country: null
                        fonds:
                          -
                            id: 1
                            name: 'fond 1'
                            archive_id: 1
                            folders:
                              -
                                id: 1
                                name: 'folder 1'
                                fond_id: 1
                                start_date: null
                                end_date: null
                          -
                            id: 2
                            name: fafafa
                            archive_id: 1
                            folders:
                              -
                                id: 2
                                name: lala
                                fond_id: 2
                                start_date: null
                                end_date: null
                          -
                            id: 3
                            name: 'fond 2'
                            archive_id: 1
                            folders: []
                          -
                            id: 4
                            name: hahaha
                            archive_id: 1
                            folders:
                              -
                                id: 3
                                name: jahaha
                                fond_id: 4
                                start_date: null
                                end_date: null
                      -
                        id: 2
                        short_name: haha3
                        name: haha3
                        country: null
                        fonds:
                          -
                            id: 5
                            name: hahaha2
                            archive_id: 2
                            folders:
                              -
                                id: 4
                                name: hahaha
                                fond_id: 5
                                start_date: null
                                end_date: null
                      -
                        id: 3
                        short_name: haha3
                        name: haha3
                        country: null
                        fonds:
                          -
                            id: 6
                            name: hahaha2
                            archive_id: 3
                            folders:
                              -
                                id: 5
                                name: hahaha
                                fond_id: 6
                                start_date: null
                                end_date: null
                      -
                        id: 4
                        short_name: haha3
                        name: haha3
                        country: null
                        fonds:
                          -
                            id: 7
                            name: hahaha2
                            archive_id: 4
                            folders:
                              -
                                id: 6
                                name: hahaha
                                fond_id: 7
                                start_date: null
                                end_date: null
                    items:
                      type: object
      tags:
        - Archives
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                orderBy:
                  type: string
                  description: 'Must be one of <code>id</code>, <code>name</code>, or <code>short_name</code>.'
                  example: id
                orderDirection:
                  type: string
                  description: 'Must be one of <code>asc</code> or <code>desc</code>.'
                  example: desc
  /api/login:
    post:
      summary: Login
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: Success
                  status_code: 422
                  message: 'Validation errors'
                  data:
                    login: 'These credentials do not match our records.'
                properties:
                  status:
                    type: string
                    example: Success
                  status_code:
                    type: integer
                    example: 422
                  message:
                    type: string
                    example: 'Validation errors'
                  data:
                    type: object
                    example:
                      login: 'These credentials do not match our records.'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Login e-mail'
                  example: login@login.sk
                password:
                  type: string
                  description: Password
                  example: qui
              required:
                - email
                - password
      security: []
  /api/token/validation:
    get:
      summary: 'Check token'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: Success
                  status_code: 201
                  message: 'Token valid check.'
                  data: false
                properties:
                  status:
                    type: string
                    example: Success
                  status_code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: 'Token valid check.'
                  data:
                    type: boolean
                    example: false
      tags:
        - Authentication
  /api/logout:
    get:
      summary: 'Log out'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: Success
                  status_code: 200
                  message: 'Successfully logged out.'
                  data: null
                properties:
                  status:
                    type: string
                    example: Success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Successfully logged out.'
                  data:
                    type: string
                    example: null
      tags:
        - Authentication
  /api/register:
    post:
      summary: Register
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: Success
                  status_code: 422
                  message: 'Validation errors.'
                  data:
                    first_name:
                      - 'The first name field is required.'
                    last_name:
                      - 'The last name field is required.'
                properties:
                  status:
                    type: string
                    example: Success
                  status_code:
                    type: integer
                    example: 422
                  message:
                    type: string
                    example: 'Validation errors.'
                  data:
                    type: object
                    example:
                      first_name:
                        - 'The first name field is required.'
                      last_name:
                        - 'The last name field is required.'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: Firstname
                  example: vero
                last_name:
                  type: string
                  description: Lastname
                  example: facere
                email:
                  type: string
                  description: 'Login e-mail'
                  example: login@login.sk
                password:
                  type: string
                  description: Password
                  example: recusandae
              required:
                - first_name
                - last_name
                - email
                - password
      security: []
  /api/password/reset/code:
    post:
      summary: 'Change password'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: Success
                  status_code: 422
                  message: 'Validation errors.'
                  data:
                    code:
                      - 'The code field is required.'
                properties:
                  status:
                    type: string
                    example: Success
                  status_code:
                    type: integer
                    example: 422
                  message:
                    type: string
                    example: 'Validation errors.'
                  data:
                    type: object
                    example:
                      code:
                        - 'The code field is required.'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Login e-mail'
                  example: login@login.sk
                code:
                  type: string
                  description: 'Password reset code'
                  example: deserunt
                password:
                  type: string
                  description: 'New password'
                  example: voluptas
              required:
                - email
                - code
                - password
      security: []
  /api/password/reset:
    post:
      summary: 'Send forgot password code'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: Success
                  status_code: 422
                  message: 'Validation errors.'
                  data:
                    email:
                      - 'The email field is required.'
                properties:
                  status:
                    type: string
                    example: Success
                  status_code:
                    type: integer
                    example: 422
                  message:
                    type: string
                    example: 'Validation errors.'
                  data:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Login e-mail'
                  example: login@login.sk
              required:
                - email
      security: []
  /api/categories:
    get:
      summary: 'Show all categories'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: Success
                  status_code: 200
                  message: 'List of all categories.'
                  data:
                    -
                      id: 4
                      name: 'Kategoria 2'
                      children: []
                    -
                      id: 3
                      name: 'Podkategoria 2'
                      children: []
                    -
                      id: 2
                      name: Podkategoria
                      children: []
                    -
                      id: 1
                      name: Kategoria
                      children:
                        -
                          id: 2
                          name: Podkategoria
                        -
                          id: 3
                          name: 'Podkategoria 2'
                properties:
                  status:
                    type: string
                    example: Success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'List of all categories.'
                  data:
                    type: array
                    example:
                      -
                        id: 4
                        name: 'Kategoria 2'
                        children: []
                      -
                        id: 3
                        name: 'Podkategoria 2'
                        children: []
                      -
                        id: 2
                        name: Podkategoria
                        children: []
                      -
                        id: 1
                        name: Kategoria
                        children:
                          -
                            id: 2
                            name: Podkategoria
                          -
                            id: 3
                            name: 'Podkategoria 2'
                    items:
                      type: object
      tags:
        - Categories
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                orderBy:
                  type: string
                  description: 'Must be one of <code>id</code> or <code>name</code>.'
                  example: id
                orderDirection:
                  type: string
                  description: 'Must be one of <code>asc</code> or <code>desc</code>.'
                  example: asc
  /api/cipher-keys:
    get:
      summary: 'All approved cipher keys'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: Success
                  status_code: 200
                  message: 'List of all approved cipher keys with details.'
                  data:
                    current_page: 1
                    data:
                      -
                        id: 2
                        signature: 'sdf sdfsdfsdf sdfsdf'
                        description: '<p>sdf sd fsd fs df sdf sdf sdf sdf sdfsdf sdfsdf sdfsdf</p>'
                        complete_structure: 'sxcvxc v xcvxcv xcvxcv'
                        used_chars: 'sdfsd fsdf'
                        cipher_type:
                          id: 2
                          name: Nomenclator
                        key_type:
                          id: 1
                          name: e
                        used_from: '2023-01-31T12:00:00.000000Z'
                        used_to: '2023-02-04T12:00:00.000000Z'
                        used_around: null
                        folder:
                          id: 2
                          name: lala
                          fond_id: 2
                          start_date: null
                          end_date: null
                          fond:
                            id: 2
                            name: fafafa
                            archive_id: 1
                            archive:
                              id: 1
                              short_name: 'archive 1'
                              name: 'archive 1'
                              country: null
                        location:
                          id: 12
                          name: Jahtakistan
                          continent: Europe
                        language:
                          id: 1
                          name: english
                        state:
                          id: approved
                          title: Approved
                          show: true
                        note: saaaaaa
                        created_by:
                          id: 1
                          first_name: Administrator
                          last_name: Administrator
                        images:
                          -
                            url:
                              thumb: 'http://dp.test/media/3/conversions/madlo-thumb.jpg'
                              big: 'http://dp.test/media/3/conversions/madlo-big.jpg'
                              large: 'http://dp.test/media/3/conversions/madlo-large.jpg'
                              original: 'http://dp.test/media/3/madlo.png'
                            structure: ''
                            has_instructions: 0
                        users:
                          -
                            person:
                              id: 1
                              name: 'user 1'
                            is_main_user: 0
                        tags:
                          -
                            id: 1
                            name: 'new tag'
                            type: cipher_key
                          -
                            id: 2
                            name: jahahaha
                            type: cipher_key
                        created_at: '2023-01-31 15:07:52'
                        updated_at: '2023-01-31 16:28:17'
                    first_page_url: 'http://dp.test/api/cipher-keys/approved?detailed=1&orderBy=id&orderDirection=desc&page=1'
                    from: 1
                    last_page: 1
                    last_page_url: 'http://dp.test/api/cipher-keys/approved?detailed=1&orderBy=id&orderDirection=desc&page=1'
                    next_page_url: null
                    path: 'http://dp.test/api/cipher-keys/approved'
                    per_page: 10000
                    prev_page_url: null
                    to: 6
                    total: 6
                properties:
                  status:
                    type: string
                    example: Success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'List of all approved cipher keys with details.'
                  data:
                    type: object
                    example:
                      current_page: 1
                      data:
                        -
                          id: 2
                          signature: 'sdf sdfsdfsdf sdfsdf'
                          description: '<p>sdf sd fsd fs df sdf sdf sdf sdf sdfsdf sdfsdf sdfsdf</p>'
                          complete_structure: 'sxcvxc v xcvxcv xcvxcv'
                          used_chars: 'sdfsd fsdf'
                          cipher_type:
                            id: 2
                            name: Nomenclator
                          key_type:
                            id: 1
                            name: e
                          used_from: '2023-01-31T12:00:00.000000Z'
                          used_to: '2023-02-04T12:00:00.000000Z'
                          used_around: null
                          folder:
                            id: 2
                            name: lala
                            fond_id: 2
                            start_date: null
                            end_date: null
                            fond:
                              id: 2
                              name: fafafa
                              archive_id: 1
                              archive:
                                id: 1
                                short_name: 'archive 1'
                                name: 'archive 1'
                                country: null
                          location:
                            id: 12
                            name: Jahtakistan
                            continent: Europe
                          language:
                            id: 1
                            name: english
                          state:
                            id: approved
                            title: Approved
                            show: true
                          note: saaaaaa
                          created_by:
                            id: 1
                            first_name: Administrator
                            last_name: Administrator
                          images:
                            -
                              url:
                                thumb: 'http://dp.test/media/3/conversions/madlo-thumb.jpg'
                                big: 'http://dp.test/media/3/conversions/madlo-big.jpg'
                                large: 'http://dp.test/media/3/conversions/madlo-large.jpg'
                                original: 'http://dp.test/media/3/madlo.png'
                              structure: ''
                              has_instructions: 0
                          users:
                            -
                              person:
                                id: 1
                                name: 'user 1'
                              is_main_user: 0
                          tags:
                            -
                              id: 1
                              name: 'new tag'
                              type: cipher_key
                            -
                              id: 2
                              name: jahahaha
                              type: cipher_key
                          created_at: '2023-01-31 15:07:52'
                          updated_at: '2023-01-31 16:28:17'
                      first_page_url: 'http://dp.test/api/cipher-keys/approved?detailed=1&orderBy=id&orderDirection=desc&page=1'
                      from: 1
                      last_page: 1
                      last_page_url: 'http://dp.test/api/cipher-keys/approved?detailed=1&orderBy=id&orderDirection=desc&page=1'
                      next_page_url: null
                      path: 'http://dp.test/api/cipher-keys/approved'
                      per_page: 10000
                      prev_page_url: null
                      to: 6
                      total: 6
      tags:
        - 'Cipher keys'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                orderBy:
                  type: string
                  description: 'Must be one of <code>id</code> or <code>signature</code>.'
                  example: signature
                orderDirection:
                  type: string
                  description: 'Must be one of <code>asc</code> or <code>desc</code>.'
                  example: desc
                page:
                  type: integer
                  description: ''
                  example: 5
                per_page:
                  type: integer
                  description: ''
                  example: 4
                detailed:
                  type: boolean
                  description: ''
                  example: false
      security: []
    post:
      summary: Create
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: Error
                  status_code: 422
                  message: 'Validation error.'
                  data:
                    signature:
                      - 'The signature has already been taken.'
                properties:
                  status:
                    type: string
                    example: Error
                  status_code:
                    type: integer
                    example: 422
                  message:
                    type: string
                    example: 'Validation error.'
                  data:
                    type: object
                    example:
                      signature:
                        - 'The signature has already been taken.'
      tags:
        - 'Cipher keys'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: Description.
                  example: explicabo
                signature:
                  type: string
                  description: 'Date to be used as the publication date.'
                  example: iure
                complete_structure:
                  type: string
                  description: 'Complete structure.'
                  example: molestiae
                used_chars:
                  type: string
                  description: 'Category the post belongs to.'
                  example: repellendus
                cipher_type:
                  type: integer
                  description: 'Cipher type.'
                  example: 12
                key_type:
                  type: integer
                  description: 'Key type.'
                  example: 20
                used_from:
                  type: string
                  description: 'Used from. Format: Y-m-d. Must be a valid date.'
                  example: '2022-02-28'
                used_to:
                  type: string
                  description: 'Used to. Format: Y-m-d. Must be a valid date.'
                  example: '2022-02-28'
                new_folder:
                  type: string
                  description: 'New folder.'
                  example: sapiente
                new_fond:
                  type: string
                  description: 'New fond.'
                  example: a
                new_archive:
                  type: string
                  description: 'New archive.'
                  example: sunt
                used_around:
                  type: string
                  description: 'Used around.'
                  example: sed
                folder_id:
                  type: integer
                  description: 'The ID of Folder. This field is required when <code>new_folder</code> is <code>null</code>.'
                  example: 1
                archive_id:
                  type: integer
                  description: 'The ID of Archive. This field is required when <code>new_archive</code> is <code>null</code>.'
                  example: 1
                fond_id:
                  type: integer
                  description: 'The ID of Fond. This field is required when <code>new_fond</code> is <code>null</code>.'
                  example: 1
                location_name:
                  type: string
                  description: 'Specific name of the location.'
                  example: Bratislava
                language_id:
                  type: integer
                  description: 'The ID of Language.'
                  example: 1
                users:
                  type: json
                  description: 'List of images data.'
                  example: '[{"name":"new user name","is_main_user":false},{"name":"new user name 2","is_main_user":true}]'
                images:
                  type: json
                  description: 'List of images data.'
                  example: '[{"has_instructions": true, "structure": "example structure"},{"has_instructions": false, "structure": ""}]'
                files:
                  type: string
                  description: ''
                  example: null
                tags:
                  type: array
                  description: ''
                  example:
                    - aut
                  items:
                    type: string
                continent:
                  type: string
                  description: Continent.
                  example: Europe
                'files[]':
                  type: string
                  format: binary
                  description: 'Image files'
                'tags[]':
                  type: string
                  description: 'Tag names'
                  example: officia
              required:
                - signature
                - cipher_type
                - key_type
                - language_id
                - users
                - images
                - continent
                - 'files[]'
  /api/cipher-keys/my:
    get:
      summary: 'All my cipher keys'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: Success
                  status_code: 200
                  message: 'List of all approved cipher keys with details.'
                  data:
                    current_page: 1
                    data:
                      -
                        id: 2
                        signature: 'sdf sdfsdfsdf sdfsdf'
                        description: '<p>sdf sd fsd fs df sdf sdf sdf sdf sdfsdf sdfsdf sdfsdf</p>'
                        complete_structure: 'sxcvxc v xcvxcv xcvxcv'
                        used_chars: 'sdfsd fsdf'
                        cipher_type:
                          id: 2
                          name: Nomenclator
                        key_type:
                          id: 1
                          name: e
                        used_from: '2023-01-31T12:00:00.000000Z'
                        used_to: '2023-02-04T12:00:00.000000Z'
                        used_around: null
                        folder:
                          id: 2
                          name: lala
                          fond_id: 2
                          start_date: null
                          end_date: null
                          fond:
                            id: 2
                            name: fafafa
                            archive_id: 1
                            archive:
                              id: 1
                              short_name: 'archive 1'
                              name: 'archive 1'
                              country: null
                        location:
                          id: 12
                          name: Jahtakistan
                          continent: Europe
                        language:
                          id: 1
                          name: english
                        state:
                          id: approved
                          title: Approved
                          show: true
                        note: saaaaaa
                        created_by:
                          id: 1
                          first_name: Administrator
                          last_name: Administrator
                        images:
                          -
                            url:
                              thumb: 'http://dp.test/media/3/conversions/madlo-thumb.jpg'
                              big: 'http://dp.test/media/3/conversions/madlo-big.jpg'
                              large: 'http://dp.test/media/3/conversions/madlo-large.jpg'
                              original: 'http://dp.test/media/3/madlo.png'
                            structure: ''
                            has_instructions: 0
                        users:
                          -
                            person:
                              id: 1
                              name: 'user 1'
                            is_main_user: 0
                        tags:
                          -
                            id: 1
                            name: 'new tag'
                            type: cipher_key
                          -
                            id: 2
                            name: jahahaha
                            type: cipher_key
                        created_at: '2023-01-31 15:07:52'
                        updated_at: '2023-01-31 16:28:17'
                    first_page_url: 'http://dp.test/api/cipher-keys/approved?detailed=1&orderBy=id&orderDirection=desc&page=1'
                    from: 1
                    last_page: 1
                    last_page_url: 'http://dp.test/api/cipher-keys/approved?detailed=1&orderBy=id&orderDirection=desc&page=1'
                    next_page_url: null
                    path: 'http://dp.test/api/cipher-keys/approved'
                    per_page: 10000
                    prev_page_url: null
                    to: 6
                    total: 6
                properties:
                  status:
                    type: string
                    example: Success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'List of all approved cipher keys with details.'
                  data:
                    type: object
                    example:
                      current_page: 1
                      data:
                        -
                          id: 2
                          signature: 'sdf sdfsdfsdf sdfsdf'
                          description: '<p>sdf sd fsd fs df sdf sdf sdf sdf sdfsdf sdfsdf sdfsdf</p>'
                          complete_structure: 'sxcvxc v xcvxcv xcvxcv'
                          used_chars: 'sdfsd fsdf'
                          cipher_type:
                            id: 2
                            name: Nomenclator
                          key_type:
                            id: 1
                            name: e
                          used_from: '2023-01-31T12:00:00.000000Z'
                          used_to: '2023-02-04T12:00:00.000000Z'
                          used_around: null
                          folder:
                            id: 2
                            name: lala
                            fond_id: 2
                            start_date: null
                            end_date: null
                            fond:
                              id: 2
                              name: fafafa
                              archive_id: 1
                              archive:
                                id: 1
                                short_name: 'archive 1'
                                name: 'archive 1'
                                country: null
                          location:
                            id: 12
                            name: Jahtakistan
                            continent: Europe
                          language:
                            id: 1
                            name: english
                          state:
                            id: approved
                            title: Approved
                            show: true
                          note: saaaaaa
                          created_by:
                            id: 1
                            first_name: Administrator
                            last_name: Administrator
                          images:
                            -
                              url:
                                thumb: 'http://dp.test/media/3/conversions/madlo-thumb.jpg'
                                big: 'http://dp.test/media/3/conversions/madlo-big.jpg'
                                large: 'http://dp.test/media/3/conversions/madlo-large.jpg'
                                original: 'http://dp.test/media/3/madlo.png'
                              structure: ''
                              has_instructions: 0
                          users:
                            -
                              person:
                                id: 1
                                name: 'user 1'
                              is_main_user: 0
                          tags:
                            -
                              id: 1
                              name: 'new tag'
                              type: cipher_key
                            -
                              id: 2
                              name: jahahaha
                              type: cipher_key
                          created_at: '2023-01-31 15:07:52'
                          updated_at: '2023-01-31 16:28:17'
                      first_page_url: 'http://dp.test/api/cipher-keys/approved?detailed=1&orderBy=id&orderDirection=desc&page=1'
                      from: 1
                      last_page: 1
                      last_page_url: 'http://dp.test/api/cipher-keys/approved?detailed=1&orderBy=id&orderDirection=desc&page=1'
                      next_page_url: null
                      path: 'http://dp.test/api/cipher-keys/approved'
                      per_page: 10000
                      prev_page_url: null
                      to: 6
                      total: 6
      tags:
        - 'Cipher keys'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                orderBy:
                  type: string
                  description: 'Must be one of <code>id</code> or <code>signature</code>.'
                  example: id
                orderDirection:
                  type: string
                  description: 'Must be one of <code>asc</code> or <code>desc</code>.'
                  example: asc
                page:
                  type: integer
                  description: ''
                  example: 13
                per_page:
                  type: integer
                  description: ''
                  example: 16
                detailed:
                  type: boolean
                  description: ''
                  example: true
  /api/key-types:
    get:
      summary: 'Show all key types'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: Success
                  status_code: 200
                  message: 'List of all key types'
                  data:
                    -
                      id: 1
                      name: e
                    -
                      id: 2
                      name: ed
                properties:
                  status:
                    type: string
                    example: Success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'List of all key types'
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: e
                      -
                        id: 2
                        name: ed
                    items:
                      type: object
      tags:
        - 'Cipher keys'
  '/api/cipher-keys/{cipherKey_id}':
    get:
      summary: 'Show cipher key'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: Success
                  status_code: 200
                  message: 'Get a cipher key.'
                  data:
                    id: 1
                    signature: 'sdf sdf sdfsdfsdf'
                    description: null
                    complete_structure: structure
                    used_chars: 'sdf sd fsdfsdfsdf'
                    cipher_type:
                      id: 1
                      name: Undefined
                    key_type:
                      id: 1
                      name: e
                    used_from: '2023-01-31T12:00:00.000000Z'
                    used_to: '2023-02-03T12:00:00.000000Z'
                    used_around: null
                    folder:
                      id: 1
                      name: 'folder 1'
                      fond_id: 1
                      start_date: null
                      end_date: null
                      fond:
                        id: 1
                        name: 'fond 1'
                        archive_id: 1
                        archive:
                          id: 1
                          short_name: 'archive 1'
                          name: 'archive 1'
                          country: null
                    location:
                      id: 9
                      name: jajaja
                      continent: Europe
                    language:
                      id: 1
                      name: english
                    state:
                      id: awaiting
                      title: Awaiting
                      show: true
                    note: null
                    created_by:
                      id: 1
                      first_name: Administrator
                      last_name: Administrator
                    images:
                      -
                        url:
                          thumb: 'http://dp.test/media/2/conversions/madlo-thumb.jpg'
                          big: 'http://dp.test/media/2/conversions/madlo-big.jpg'
                          large: 'http://dp.test/media/2/conversions/madlo-large.jpg'
                          original: 'http://dp.test/media/2/madlo.png'
                        structure: ''
                        has_instructions: 1
                    users: []
                    tags:
                      -
                        id: 1
                        name: 'new tag'
                        type: cipher_key
                    created_at: '2023-01-31 14:46:54'
                    updated_at: '2023-01-31 14:46:55'
                properties:
                  status:
                    type: string
                    example: Success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Get a cipher key.'
                  data:
                    type: object
                    example:
                      id: 1
                      signature: 'sdf sdf sdfsdfsdf'
                      description: null
                      complete_structure: structure
                      used_chars: 'sdf sd fsdfsdfsdf'
                      cipher_type:
                        id: 1
                        name: Undefined
                      key_type:
                        id: 1
                        name: e
                      used_from: '2023-01-31T12:00:00.000000Z'
                      used_to: '2023-02-03T12:00:00.000000Z'
                      used_around: null
                      folder:
                        id: 1
                        name: 'folder 1'
                        fond_id: 1
                        start_date: null
                        end_date: null
                        fond:
                          id: 1
                          name: 'fond 1'
                          archive_id: 1
                          archive:
                            id: 1
                            short_name: 'archive 1'
                            name: 'archive 1'
                            country: null
                      location:
                        id: 9
                        name: jajaja
                        continent: Europe
                      language:
                        id: 1
                        name: english
                      state:
                        id: awaiting
                        title: Awaiting
                        show: true
                      note: null
                      created_by:
                        id: 1
                        first_name: Administrator
                        last_name: Administrator
                      images:
                        -
                          url:
                            thumb: 'http://dp.test/media/2/conversions/madlo-thumb.jpg'
                            big: 'http://dp.test/media/2/conversions/madlo-big.jpg'
                            large: 'http://dp.test/media/2/conversions/madlo-large.jpg'
                            original: 'http://dp.test/media/2/madlo.png'
                          structure: ''
                          has_instructions: 1
                      users: []
                      tags:
                        -
                          id: 1
                          name: 'new tag'
                          type: cipher_key
                      created_at: '2023-01-31 14:46:54'
                      updated_at: '2023-01-31 14:46:55'
      tags:
        - 'Cipher keys'
      security: []
    post:
      summary: Update
      description: 'Update a cipher key is possible when the cipher key has one of the states: APPROVED, AWAITING, REVISE'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: Error
                  status_code: 422
                  message: 'Validation error.'
                  data:
                    signature:
                      - 'The signature has already been taken.'
                properties:
                  status:
                    type: string
                    example: Error
                  status_code:
                    type: integer
                    example: 422
                  message:
                    type: string
                    example: 'Validation error.'
                  data:
                    type: object
                    example:
                      signature:
                        - 'The signature has already been taken.'
      tags:
        - 'Cipher keys'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: Description.
                  example: nihil
                signature:
                  type: string
                  description: 'Date to be used as the publication date.'
                  example: et
                complete_structure:
                  type: string
                  description: 'Complete structure.'
                  example: id
                used_chars:
                  type: string
                  description: 'Category the post belongs to.'
                  example: blanditiis
                cipher_type:
                  type: integer
                  description: 'Cipher type.'
                  example: 8
                key_type:
                  type: integer
                  description: 'Key type.'
                  example: 11
                used_from:
                  type: string
                  description: 'Used from. Format: Y-m-d. Must be a valid date.'
                  example: '2022-02-28'
                used_to:
                  type: string
                  description: 'Used to. Format: Y-m-d. Must be a valid date.'
                  example: '2022-02-28'
                new_folder:
                  type: string
                  description: 'New folder.'
                  example: voluptas
                new_fond:
                  type: string
                  description: 'New fond.'
                  example: mollitia
                new_archive:
                  type: string
                  description: 'New archive.'
                  example: velit
                used_around:
                  type: string
                  description: 'Used around.'
                  example: saepe
                folder_id:
                  type: integer
                  description: 'The ID of Folder. This field is required when <code>new_folder</code> is <code>null</code>.'
                  example: 1
                archive_id:
                  type: integer
                  description: 'The ID of Archive. This field is required when <code>new_archive</code> is <code>null</code>.'
                  example: 1
                fond_id:
                  type: integer
                  description: 'The ID of Fond. This field is required when <code>new_fond</code> is <code>null</code>.'
                  example: 1
                location_name:
                  type: string
                  description: 'Specific name of the location.'
                  example: Bratislava
                language_id:
                  type: integer
                  description: 'The ID of Language.'
                  example: 1
                users:
                  type: json
                  description: 'List of images data.'
                  example: '[{"name":"new user name","is_main_user":false},{"name":"new user name 2","is_main_user":true}]'
                tags:
                  type: array
                  description: ''
                  example:
                    - sint
                  items:
                    type: string
                continent:
                  type: string
                  description: Continent.
                  example: Europe
                'tags[]':
                  type: string
                  description: 'Tag names'
                  example: et
              required:
                - cipher_type
                - key_type
                - language_id
                - users
                - continent
    parameters:
      -
        in: path
        name: cipherKey_id
        description: 'The ID of the cipherKey.'
        example: 1
        required: true
        schema:
          type: integer
  /api/cipher-types:
    get:
      summary: 'Show all cipher types'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: Success
                  status_code: 200
                  message: 'List of all cipher types.'
                  data:
                    -
                      id: 3
                      name: Code
                    -
                      id: 2
                      name: Nomenclator
                    -
                      id: 4
                      name: 'Simple substitution'
                    -
                      id: 1
                      name: Undefined
                properties:
                  status:
                    type: string
                    example: Success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'List of all cipher types.'
                  data:
                    type: array
                    example:
                      -
                        id: 3
                        name: Code
                      -
                        id: 2
                        name: Nomenclator
                      -
                        id: 4
                        name: 'Simple substitution'
                      -
                        id: 1
                        name: Undefined
                    items:
                      type: object
      tags:
        - 'Cipher keys'
  /api/languages:
    get:
      summary: 'Show all languages'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: Success
                  status_code: 200
                  message: 'List of all languages'
                  data:
                    -
                      id: 1
                      name: english
                properties:
                  status:
                    type: string
                    example: Success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'List of all languages'
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: english
                    items:
                      type: object
      tags:
        - Languages
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                orderBy:
                  type: string
                  description: 'Must be one of <code>id</code> or <code>name</code>.'
                  example: id
                orderDirection:
                  type: string
                  description: 'Must be one of <code>asc</code> or <code>desc</code>.'
                  example: desc
  /api/locations:
    get:
      summary: 'Show all locations'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: Success
                  status_code: 200
                  message: 'List of all locations'
                  data:
                    -
                      id: 6
                      continent: Africa
                      name: null
                    -
                      id: 7
                      continent: Antartica
                      name: null
                    -
                      id: 4
                      continent: Asia
                      name: null
                    -
                      id: 10
                      continent: Asia
                      name: Jamajka
                    -
                      id: 11
                      continent: Asia
                      name: Jahtakistan
                    -
                      id: 3
                      continent: Europe
                      name: null
                    -
                      id: 9
                      continent: Europe
                      name: jajaja
                    -
                      id: 12
                      continent: Europe
                      name: Jahtakistan
                    -
                      id: 13
                      continent: Europe
                      name: salamandra
                    -
                      id: 14
                      continent: Europe
                      name: 'Niekda doma'
                    -
                      id: 15
                      continent: Europe
                      name: 'Nikede johanesk'
                    -
                      id: 1
                      continent: 'North America'
                      name: null
                    -
                      id: 5
                      continent: Oceania
                      name: null
                    -
                      id: 2
                      continent: 'South America'
                      name: null
                    -
                      id: 8
                      continent: Unknown
                      name: null
                properties:
                  status:
                    type: string
                    example: Success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'List of all locations'
                  data:
                    type: array
                    example:
                      -
                        id: 6
                        continent: Africa
                        name: null
                      -
                        id: 7
                        continent: Antartica
                        name: null
                      -
                        id: 4
                        continent: Asia
                        name: null
                      -
                        id: 10
                        continent: Asia
                        name: Jamajka
                      -
                        id: 11
                        continent: Asia
                        name: Jahtakistan
                      -
                        id: 3
                        continent: Europe
                        name: null
                      -
                        id: 9
                        continent: Europe
                        name: jajaja
                      -
                        id: 12
                        continent: Europe
                        name: Jahtakistan
                      -
                        id: 13
                        continent: Europe
                        name: salamandra
                      -
                        id: 14
                        continent: Europe
                        name: 'Niekda doma'
                      -
                        id: 15
                        continent: Europe
                        name: 'Nikede johanesk'
                      -
                        id: 1
                        continent: 'North America'
                        name: null
                      -
                        id: 5
                        continent: Oceania
                        name: null
                      -
                        id: 2
                        continent: 'South America'
                        name: null
                      -
                        id: 8
                        continent: Unknown
                        name: null
                    items:
                      type: object
      tags:
        - Locations
  /api/persons:
    get:
      summary: 'Show all persons'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: Success
                  status_code: 200
                  message: 'List of all persons'
                  data:
                    -
                      id: 11
                      name: atos
                    -
                      id: 10
                      name: hahahahahaha
                    -
                      id: 8
                      name: jahaha
                properties:
                  status:
                    type: string
                    example: Success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'List of all persons'
                  data:
                    type: array
                    example:
                      -
                        id: 11
                        name: atos
                      -
                        id: 10
                        name: hahahahahaha
                      -
                        id: 8
                        name: jahaha
                    items:
                      type: object
      tags:
        - Persons
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                orderBy:
                  type: string
                  description: 'Must be one of <code>id</code> or <code>name</code>.'
                  example: name
                orderDirection:
                  type: string
                  description: 'Must be one of <code>asc</code> or <code>desc</code>.'
                  example: asc
  /api/solutions:
    get:
      summary: 'Show all solutions'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: Success
                  status_code: 200
                  message: 'List of all solutions.'
                  data:
                    -
                      id: 2
                      name: 'Partially solved'
                    -
                      id: 1
                      name: Solved
                properties:
                  status:
                    type: string
                    example: Success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'List of all solutions.'
                  data:
                    type: array
                    example:
                      -
                        id: 2
                        name: 'Partially solved'
                      -
                        id: 1
                        name: Solved
                    items:
                      type: object
      tags:
        - Solutions
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                orderBy:
                  type: string
                  description: 'Must be one of <code>id</code> or <code>name</code>.'
                  example: id
                orderDirection:
                  type: string
                  description: 'Must be one of <code>asc</code> or <code>desc</code>.'
                  example: desc
  /api/statistics:
    get:
      summary: 'Show all solutions'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: Success
                  status_code: 200
                  message: 'Statsitics data.'
                  data:
                    cipher_keys_count: 20
                    cryptograms: 3
                properties:
                  status:
                    type: string
                    example: Success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Statsitics data.'
                  data:
                    type: object
                    example:
                      cipher_keys_count: 20
                      cryptograms: 3
      tags:
        - Statistics
      security: []
  /api/tags:
    get:
      summary: 'Show all tags'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: Success
                  status_code: 200
                  message: 'List of all tags'
                  data:
                    -
                      id: 4
                      name: lapovica
                      type: cryptogram
                    -
                      id: 3
                      name: tagovica
                      type: cryptogram
                    -
                      id: 2
                      name: jahahaha
                      type: cipher_key
                    -
                      id: 1
                      name: 'new tag'
                      type: cipher_key
                properties:
                  status:
                    type: string
                    example: Success
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'List of all tags'
                  data:
                    type: array
                    example:
                      -
                        id: 4
                        name: lapovica
                        type: cryptogram
                      -
                        id: 3
                        name: tagovica
                        type: cryptogram
                      -
                        id: 2
                        name: jahahaha
                        type: cipher_key
                      -
                        id: 1
                        name: 'new tag'
                        type: cipher_key
                    items:
                      type: object
      tags:
        - Tags
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                orderBy:
                  type: string
                  description: 'Must be one of <code>id</code>, <code>name</code>, or <code>type</code>.'
                  example: type
                orderDirection:
                  type: string
                  description: 'Must be one of <code>asc</code> or <code>desc</code>.'
                  example: asc
                type:
                  type: string
                  description: 'Must be one of <code>cipher_key</code> or <code>cryptogram</code>.'
                  example: cipher_key
tags:
  -
    name: Archives
    description: "\nAPIs for Archives"
  -
    name: Authentication
    description: "\nAPIs for Auth"
  -
    name: Categories
    description: "\nAPIs for Categories"
  -
    name: 'Cipher keys'
    description: "\nAPIs for Cipher keys"
  -
    name: Languages
    description: "\nAPIs for Languages"
  -
    name: Locations
    description: "\nAPIs for Locations"
  -
    name: Persons
    description: "\nAPIs for Persons"
  -
    name: Solutions
    description: "\nAPIs for Solutions"
  -
    name: Statistics
    description: "\nAPIs for Statistics"
  -
    name: Tags
    description: "\nAPIs for Tags"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
