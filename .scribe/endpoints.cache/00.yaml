## Autogenerated by Scribe. DO NOT MODIFY.

name: Authentication
description: |-

  APIs for Auth
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      title: Login
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Login e-mail'
        required: true
        example: login@login.sk
        type: string
        custom: []
      password:
        name: password
        description: Password
        required: true
        example: excepturi
        type: string
        custom: []
    responses:
      -
        status: 200
        content: |
          {
              "status": "Success",
              "status_code": 200,
              "message": "Successfully logged in.",
              "data": {
                  "access_token": "1|S3M3Qh29NzXsvX05OPkZQCIekVuh3p5QFT25oXFL",
                  "token_type": "Bearer",
                  "is_admin": true,
                  "user": {
                      "id": 1,
                      "first_name": "Administrator",
                      "last_name": "Administrator",
                      "email": "admin@hcportal.eu",
                      "activated": 1,
                      "forbidden": 0,
                      "language": "en",
                      "deleted_at": null,
                      "created_at": "2022-11-13T16:51:30.000000Z",
                      "updated_at": "2022-11-20T12:11:05.000000Z",
                      "full_name": "Administrator Administrator",
                      "resource_url": "http://dp.test/admin/users/1",
                      "roles": [
                          {
                              "id": 1,
                              "name": "admin",
                              "guard_name": "web",
                              "created_at": "2022-11-13T16:51:30.000000Z",
                              "updated_at": "2022-11-13T16:51:30.000000Z",
                              "pivot": {
                                  "model_id": 1,
                                  "role_id": 1,
                                  "model_type": "App\\Models\\User"
                              }
                          }
                      ]
                  }
              }
          }
        headers: []
        description: '200'
      -
        status: 200
        content: |
          {
              "status": "Success",
              "status_code": 422,
              "message": "Validation errors",
              "data": {
                  "login": "These credentials do not match our records."
              }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/token/validation
    metadata:
      title: 'Check token'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "Success",
            "status_code": 201,
            "message": "Token valid check.",
            "data": false
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/logout
    metadata:
      title: 'Log out'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": "Success",
           "status_code": 200,
           "message": "Successfully logged out.",
           "data": null
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      title: Register
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: Firstname
        required: true
        example: est
        type: string
        custom: []
      last_name:
        name: last_name
        description: Lastname
        required: true
        example: quo
        type: string
        custom: []
      email:
        name: email
        description: 'Login e-mail'
        required: true
        example: login@login.sk
        type: string
        custom: []
      password:
        name: password
        description: Password
        required: true
        example: eveniet
        type: string
        custom: []
    responses:
      -
        status: 200
        content: |
          {
              "status": "Success",
              "status_code": 200,
              "message": "Successfully registered.",
              "data": {
                  "first_name": "Ati",
                  "last_name": "Mucska",
                  "email": "attila.mucska@gmail.com",
                  "updated_at": "2022-11-20T13:16:26.000000Z",
                  "created_at": "2022-11-20T13:16:26.000000Z",
                  "id": 2,
                  "full_name": "Ati Mucska",
                  "resource_url": "http://dp.test/admin/users/2"
              }
          }
        headers: []
        description: '200'
      -
        status: 200
        content: |
          {
              "status": "Success",
              "status_code": 422,
              "message": "Validation errors.",
              "data": {
                  "first_name": ["The first name field is required."],
                  "last_name": ["The last name field is required."]
              }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/password/reset/code
    metadata:
      title: 'Change password'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Login e-mail'
        required: true
        example: login@login.sk
        type: string
        custom: []
      code:
        name: code
        description: 'Password reset code'
        required: true
        example: alias
        type: string
        custom: []
      password:
        name: password
        description: 'New password'
        required: true
        example: inventore
        type: string
        custom: []
    responses:
      -
        status: 200
        content: |
          {
              "status": "Success",
              "status_code": 200,
              "message": "Successfully reset password.",
              "data": []
          }
        headers: []
        description: '200'
      -
        status: 200
        content: |
          {
              "status": "Success",
              "status_code": 422,
              "message": "Validation errors.",
              "data": {
                  "code": ["The code field is required."]
              }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/password/reset
    metadata:
      title: 'Send forgot password code'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Login e-mail'
        required: true
        example: login@login.sk
        type: string
        custom: []
    responses:
      -
        status: 200
        content: |
          {
              "status": "Success",
              "status_code": 200,
              "message": "Successfully password reset code sent.",
              "data": []
          }
        headers: []
        description: '200'
      -
        status: 200
        content: |
          {
              "status": "Success",
              "status_code": 422,
              "message": "Validation errors.",
              "data": {
                  "email": ["The email field is required."]
              }
          }
        headers: []
        description: '200'
    responseFields: []
